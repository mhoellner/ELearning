@using ELearning.Models
@using Our.Umbraco.Ditto
@model ELearning.Models.QuestionSerializable
@{
    var helper = new UmbracoHelper(UmbracoContext.Current);
    var typedQuestion = helper.TypedContent(Model.QuestionId).As<QuestionItem>();
    List<AbstractAnswer> typedAnswers = helper.TypedContent(Model.Answers.Select(x => x.AnswerId)).As<AbstractAnswer>().ToList();
    string data = "data" + Model.QuestionId;
    string container = "chartContainer" + Model.QuestionId;
    string chartVar = "chart" + Model.QuestionId;
}
<div>
    <script type="text/javascript">
        window.addEventListener("load", function() {
            var @data = [
                @for (int i = 0; i < Model.Answers.Length; i++)
                {
                    <text>{ y: @Model.Answers[i].TimesClicked, label: "@typedAnswers[i].Answer.StripHtml().EncodeJsString()" }</text>
                    if (i != Model.Answers.Length - 1) { <text>,</text> }
                }
            ];
            var @chartVar = new CanvasJS.Chart("@container",
            {
                animationEnabled: true,
                axisY: {
                    title: "Times Clicked"
                },
                legend: {
                    verticalAlign: "bottom",
                    horizontalAlign: "center"
                },
                theme: "theme2",
                data: [
                    {
                        type: "column",
                        showInLegend: true,
                        legendMarkerColor: "grey",
                        legendText: "@typedQuestion.Question.ToString().StripHtml().EncodeJsString()",
                        dataPoints: @data
                        }
                ]
            });

            @{@chartVar;}.render();
        });
    </script>
    <div id="@container" style="height: 300px; width: 100%;"></div>
</div>