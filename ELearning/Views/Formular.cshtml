@using ELearning
@using ELearning.Models
@using Our.Umbraco.Ditto
@inherits UmbracoTemplatePage
@{
    Layout = "Master.cshtml";
    var viewModel = Model.Content.As<Form>();
}
<style>
    .customMenuItem {
        background-color: White;
        color: darkslategray;
        height: auto;
        padding: 8px;
        margin: 0px !important;
        border: 1px solid gray;
        text-align: left;
        width: 100%;
    }

        .customMenuItem:hover {
            background-color: #D92425;
            color: white;
            border: 1px solid gray;
        }

    .active {
        background-color: #EDEDED !important;
        color: black !important;
        ;
    }

    .focus {
        -webkit-box-shadow: none !important;
        -moz-box-shadow: none !important;
        box-shadow: none !important;
    }

    .questHeader {
        background-color: #6B6F73;
        color: white;
        font-weight: bold;
        margin-bottom: 0px;
    }

    .customMenuItem:last-child {
        border-bottom-right-radius: .25rem;
        border-bottom-left-radius: .25rem;
    }

    .btn {
        border-radius: 0px;
    }
    
</style>

<h2>
    @viewModel.Name
</h2>
@viewModel.Introduction
@if (viewModel.Questions.Any())
{
    <form action="/auswertung" method="post" id="questionForm">
        <input type="hidden" name="formId" value="@viewModel.Id" />
         @*Iterating all Questions*@ 
        @foreach (var question in viewModel.Questions)
        {
            <fieldset>
                @*<h5>
                        @question.Question
                    </h5>
                    @{
                        IEnumerable<AbstractAnswer> answers = question.Children.As<AbstractAnswer>();
                        //Iterating all Answers to the current question
                        foreach (var answer in answers)
                        {
                            //Differentiates whether it's a Radiobutton or a checkbox
                            if (question.DocumentTypeAlias == Templates.SingleChoiceQuestionTemplate)
                            {
                                    <input type="radio" name="@question.Id" value="@answer.Id"/> @answer.Answer <br />
                            }
                            else if (question.DocumentTypeAlias == Templates.MultipleChoiceQuestionTemplate)
                            {
                                    <input type="checkbox" name="@question.Id" value="@answer.Id"/> @answer.Answer<br />
                            }
                        }
                    }*@
                <div class="btn-group" style="display:block;" data-toggle="buttons">
                    <div class="list-group">
                        <div class="list-group-item questHeader">
                            @question.Question
                        </div>

                        @{
                            IEnumerable<AbstractAnswer> answers = question.Children.As<AbstractAnswer>();
                            //Iterating all Answers to the current question
                            foreach (var answer in answers)
                            {
                                //Differentiates whether it's a Radiobutton or a checkbox
                                if (question.DocumentTypeAlias == Templates.SingleChoiceQuestionTemplate)
                                {
                                    <label class="btn btn-primary customMenuItem">
                                        <input type="radio" name="@question.Id" value="@answer.Id"> @answer.Answer
                                    </label>

                                }
                                else if (question.DocumentTypeAlias == Templates.MultipleChoiceQuestionTemplate)
                                {
                                    <label class="btn btn-primary customMenuItem">
                                        <input type="checkbox" name="@question.Id" value="@answer.Id"> @answer.Answer
                                    </label>                                  
                                }
                            }
                        }

                       
                    </div>
                </div>
            </fieldset>
            <br />
        }
        <br/>
        <div id="formErrorMessage" role="alert">
            <script src="~/js/Form.js"></script>
        </div>
        <button type="submit" class="btn btn-secondary background-red">Fragebogen zur Korrektur geben</button>
    </form>
}